version: '3.8'

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-academyquest_production}
      POSTGRES_USER: ${POSTGRES_USER:-academyquest}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_me_in_production}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  web:
    image: lynchz/academyquest:latest-amd64
    environment:
      - RAILS_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-academyquest}:${POSTGRES_PASSWORD:-change_me_in_production}@db:5432/${POSTGRES_DB:-academyquest_production}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE:-your_secret_key_base_here}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY:-your_master_key_here}
      - RAILS_SERVE_STATIC_FILES=true
      - RAILS_LOG_TO_STDOUT=true
      - LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.2
    ports:
      - "3001:3000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - rails_storage:/rails/storage
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    entrypoint: []
    command: >
      bash -c "
        echo 'Waiting for database...' &&
        until pg_isready -h db -p 5432 -U ${POSTGRES_USER:-academyquest}; do
          echo 'Database not ready, sleeping...'
          sleep 2
        done &&
        echo 'Database ready! Preparing database...' &&
        cd /rails &&
        bundle exec rails db:prepare &&
        echo 'Starting Rails server...' &&
        bundle exec rails server -b 0.0.0.0 -p 3000 -e production
      "

volumes:
  postgres_data:
  rails_storage: